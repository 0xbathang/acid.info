import { MutableRefObject } from 'react';
export interface IResizeObserverContext {
    observe: (id: string, ref: MutableRefObject<Element>) => void;
    unobserve: (id: string) => void;
    ready?: boolean;
    rect: Record<string, DOMRect>;
}
export declare const ResizeObserverContext: import("react").Context<IResizeObserverContext>;
export declare const useResizeObserverAPI: () => {
    observe: (id: string, ref: MutableRefObject<Element>) => void;
    unobserve: (id: string) => void;
    ready: boolean | undefined;
};
export declare const useDOMRect: (id: string, defaultValue?: any) => DOMRect;
