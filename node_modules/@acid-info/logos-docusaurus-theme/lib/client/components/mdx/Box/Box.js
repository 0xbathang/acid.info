"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Box = void 0;
const tslib_1 = require("tslib");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = tslib_1.__importDefault(require("react"));
const makeStyle_1 = require("../../../lib/makeStyle");
require("./Box.scss");
function vars(key, _val, defaultValue, unit) {
    const val = typeof _val === 'string' || typeof _val === 'number' ? { xs: _val } : _val;
    const variables = [];
    const format = (value) => {
        return typeof value === 'number' && unit ? `${value}${unit}` : `${value}`;
    };
    ['xs', 'sm', 'md', 'lg', 'xl'].forEach((bp, index) => {
        const value = val[bp];
        if (!value) {
            const prev = variables[index - 1]?.[1];
            variables.push([`${key}-${bp}`, prev ? prev : format(defaultValue)]);
        }
        else
            variables.push([`${key}-${bp}`, format(value)]);
    });
    return Object.fromEntries(variables);
}
const Box = ({ top = 0, bottom = 0, className, style = {}, children, ...props }) => {
    return (react_1.default.createElement("div", { className: (0, clsx_1.default)(className, 'mdx-box'), style: (0, makeStyle_1.makeStyle)({ ...style }, {
            ...vars('mdx-box-top', top, 0, 'px'),
            ...vars('mdx-box-bottom', bottom, 0, 'px'),
        }), ...props }, children));
};
exports.Box = Box;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9tZHgvQm94L0JveC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdEQUF1QjtBQUN2QiwwREFBeUI7QUFDekIsc0RBQWtEO0FBQ2xELHNCQUFtQjtBQVVuQixTQUFTLElBQUksQ0FDWCxHQUFXLEVBQ1gsSUFBeUQsRUFDekQsWUFBNkIsRUFDN0IsSUFBYTtJQUViLE1BQU0sR0FBRyxHQUNQLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUE7SUFFNUUsTUFBTSxTQUFTLEdBQWUsRUFBRSxDQUFBO0lBRWhDLE1BQU0sTUFBTSxHQUFHLENBQUMsS0FBVSxFQUFFLEVBQUU7UUFDNUIsT0FBTyxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLEVBQUUsQ0FBQTtJQUMzRSxDQUFDLENBRUE7SUFBQSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUU7UUFDcEQsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ3JCLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixNQUFNLElBQUksR0FBRyxTQUFTLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDdEMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQ3JFOztZQUFNLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxFQUFFLEVBQUUsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3hELENBQUMsQ0FBQyxDQUFBO0lBRUYsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQ3RDLENBQUM7QUFPTSxNQUFNLEdBQUcsR0FBdUIsQ0FBQyxFQUN0QyxHQUFHLEdBQUcsQ0FBQyxFQUNQLE1BQU0sR0FBRyxDQUFDLEVBQ1YsU0FBUyxFQUNULEtBQUssR0FBRyxFQUFFLEVBQ1YsUUFBUSxFQUNSLEdBQUcsS0FBSyxFQUNULEVBQUUsRUFBRTtJQUNILE9BQU8sQ0FDTCx1Q0FDRSxTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxFQUNyQyxLQUFLLEVBQUUsSUFBQSxxQkFBUyxFQUNkLEVBQUUsR0FBRyxLQUFLLEVBQUUsRUFDWjtZQUNFLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQztZQUNwQyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQztTQUMzQyxDQUNGLEtBQ0csS0FBSyxJQUVSLFFBQVEsQ0FDTCxDQUNQLENBQUE7QUFDSCxDQUFDLENBQUE7QUF2QlksUUFBQSxHQUFHLE9BdUJmIiwiZmlsZSI6ImNsaWVudC9jb21wb25lbnRzL21keC9Cb3gvQm94LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IG1ha2VTdHlsZSB9IGZyb20gJy4uLy4uLy4uL2xpYi9tYWtlU3R5bGUnXG5pbXBvcnQgJy4vQm94LnNjc3MnXG5cbnR5cGUgQnJlYWtwb2ludHNTdHlsZTxUPiA9IHtcbiAgeHM/OiBUXG4gIHNtPzogVFxuICBtZD86IFRcbiAgbGc/OiBUXG4gIHhsPzogVFxufVxuXG5mdW5jdGlvbiB2YXJzKFxuICBrZXk6IHN0cmluZyxcbiAgX3ZhbDogQnJlYWtwb2ludHNTdHlsZTxzdHJpbmcgfCBudW1iZXI+IHwgc3RyaW5nIHwgbnVtYmVyLFxuICBkZWZhdWx0VmFsdWU6IHN0cmluZyB8IG51bWJlcixcbiAgdW5pdD86IHN0cmluZyxcbikge1xuICBjb25zdCB2YWwgPVxuICAgIHR5cGVvZiBfdmFsID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgX3ZhbCA9PT0gJ251bWJlcicgPyB7IHhzOiBfdmFsIH0gOiBfdmFsXG5cbiAgY29uc3QgdmFyaWFibGVzOiBzdHJpbmdbXVtdID0gW11cblxuICBjb25zdCBmb3JtYXQgPSAodmFsdWU6IGFueSkgPT4ge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIHVuaXQgPyBgJHt2YWx1ZX0ke3VuaXR9YCA6IGAke3ZhbHVlfWBcbiAgfVxuXG4gIDtbJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ10uZm9yRWFjaCgoYnAsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSB2YWxbYnBdXG4gICAgaWYgKCF2YWx1ZSkge1xuICAgICAgY29uc3QgcHJldiA9IHZhcmlhYmxlc1tpbmRleCAtIDFdPy5bMV1cbiAgICAgIHZhcmlhYmxlcy5wdXNoKFtgJHtrZXl9LSR7YnB9YCwgcHJldiA/IHByZXYgOiBmb3JtYXQoZGVmYXVsdFZhbHVlKV0pXG4gICAgfSBlbHNlIHZhcmlhYmxlcy5wdXNoKFtgJHtrZXl9LSR7YnB9YCwgZm9ybWF0KHZhbHVlKV0pXG4gIH0pXG5cbiAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyh2YXJpYWJsZXMpXG59XG5cbmV4cG9ydCB0eXBlIEJveFByb3BzID0gUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+ICYge1xuICB0b3A/OiBCcmVha3BvaW50c1N0eWxlPG51bWJlcj4gfCBudW1iZXJcbiAgYm90dG9tPzogQnJlYWtwb2ludHNTdHlsZTxudW1iZXI+IHwgbnVtYmVyXG59XG5cbmV4cG9ydCBjb25zdCBCb3g6IFJlYWN0LkZDPEJveFByb3BzPiA9ICh7XG4gIHRvcCA9IDAsXG4gIGJvdHRvbSA9IDAsXG4gIGNsYXNzTmFtZSxcbiAgc3R5bGUgPSB7fSxcbiAgY2hpbGRyZW4sXG4gIC4uLnByb3BzXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtjbHN4KGNsYXNzTmFtZSwgJ21keC1ib3gnKX1cbiAgICAgIHN0eWxlPXttYWtlU3R5bGUoXG4gICAgICAgIHsgLi4uc3R5bGUgfSxcbiAgICAgICAge1xuICAgICAgICAgIC4uLnZhcnMoJ21keC1ib3gtdG9wJywgdG9wLCAwLCAncHgnKSxcbiAgICAgICAgICAuLi52YXJzKCdtZHgtYm94LWJvdHRvbScsIGJvdHRvbSwgMCwgJ3B4JyksXG4gICAgICAgIH0sXG4gICAgICApfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl19
