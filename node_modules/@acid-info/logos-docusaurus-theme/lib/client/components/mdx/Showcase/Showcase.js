"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Showcase = void 0;
const tslib_1 = require("tslib");
const lsd_react_1 = require("@acid-info/lsd-react");
const theme_common_1 = require("@docusaurus/theme-common");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = tslib_1.__importDefault(require("react"));
require("./Showcase.scss");
const Showcase = ({ items = [], className, children, ...props }) => {
    const { isDarkTheme } = (0, theme_common_1.useColorMode)();
    return (react_1.default.createElement("div", { className: (0, clsx_1.default)(className, 'mdx-showcase'), ...props }, items.map((item, index) => {
        const logoSrc = item.logo ?? item.logoDark;
        return (react_1.default.createElement("div", { key: index, className: "mdx-showcase__item" },
            react_1.default.createElement("div", { key: index, className: "mdx-showcase__item-inner" },
                react_1.default.createElement("img", { src: (isDarkTheme ? item.logoDark : item.logo) ?? logoSrc, alt: typeof item.name === 'string' ? item.name : 'image', className: "mdx-showcase__item-logo" }),
                react_1.default.createElement(lsd_react_1.Typography, { variant: "h3", component: "h2", className: "mdx-showcase__item-name" }, item.name),
                react_1.default.createElement(lsd_react_1.Typography, { variant: "subtitle1", component: "p", className: "mdx-showcase__item-description" }, item.description))));
    })));
};
exports.Showcase = Showcase;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9tZHgvU2hvd2Nhc2UvU2hvd2Nhc2UudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxvREFBaUQ7QUFDakQsMkRBQXVEO0FBQ3ZELHdEQUF1QjtBQUN2QiwwREFBeUI7QUFDekIsMkJBQXdCO0FBZ0JqQixNQUFNLFFBQVEsR0FBNEIsQ0FBQyxFQUNoRCxLQUFLLEdBQUcsRUFBRSxFQUNWLFNBQVMsRUFDVCxRQUFRLEVBQ1IsR0FBRyxLQUFLLEVBQ1QsRUFBRSxFQUFFO0lBQ0gsTUFBTSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUEsMkJBQVksR0FBRSxDQUFBO0lBRXRDLE9BQU8sQ0FDTCx1Q0FBSyxTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQyxLQUFNLEtBQUssSUFDdkQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUN6QixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUE7UUFFMUMsT0FBTyxDQUNMLHVDQUFLLEdBQUcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFDLG9CQUFvQjtZQUM3Qyx1Q0FBSyxHQUFHLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBQywwQkFBMEI7Z0JBQ25ELHVDQUNFLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLE9BQU8sRUFDekQsR0FBRyxFQUFFLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFDeEQsU0FBUyxFQUFDLHlCQUF5QixHQUNuQztnQkFDRiw4QkFBQyxzQkFBVSxJQUNULE9BQU8sRUFBQyxJQUFJLEVBQ1osU0FBUyxFQUFDLElBQUksRUFDZCxTQUFTLEVBQUMseUJBQXlCLElBRWxDLElBQUksQ0FBQyxJQUFJLENBQ0M7Z0JBQ2IsOEJBQUMsc0JBQVUsSUFDVCxPQUFPLEVBQUMsV0FBVyxFQUNuQixTQUFTLEVBQUMsR0FBRyxFQUNiLFNBQVMsRUFBQyxnQ0FBZ0MsSUFFekMsSUFBSSxDQUFDLFdBQVcsQ0FDTixDQUNULENBQ0YsQ0FDUCxDQUFBO0lBQ0gsQ0FBQyxDQUFDLENBQ0UsQ0FDUCxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBekNZLFFBQUEsUUFBUSxZQXlDcEIiLCJmaWxlIjoiY2xpZW50L2NvbXBvbmVudHMvbWR4L1Nob3djYXNlL1Nob3djYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwb2dyYXBoeSB9IGZyb20gJ0BhY2lkLWluZm8vbHNkLXJlYWN0J1xuaW1wb3J0IHsgdXNlQ29sb3JNb2RlIH0gZnJvbSAnQGRvY3VzYXVydXMvdGhlbWUtY29tbW9uJ1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCAnLi9TaG93Y2FzZS5zY3NzJ1xuXG5leHBvcnQgdHlwZSBTaG93Y2FzZUl0ZW0gPSB7XG4gIG5hbWU6IFJlYWN0LlJlYWN0Tm9kZVxuICBsb2dvOiBzdHJpbmdcbiAgbG9nb0Rhcms6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogUmVhY3QuUmVhY3ROb2RlXG59XG5cbmV4cG9ydCB0eXBlIFNob3djYXNlUHJvcHMgPSBPbWl0PFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sXG4gICd0aXRsZSdcbj4gJiB7XG4gIGl0ZW1zOiBTaG93Y2FzZUl0ZW1bXVxufVxuXG5leHBvcnQgY29uc3QgU2hvd2Nhc2U6IFJlYWN0LkZDPFNob3djYXNlUHJvcHM+ID0gKHtcbiAgaXRlbXMgPSBbXSxcbiAgY2xhc3NOYW1lLFxuICBjaGlsZHJlbixcbiAgLi4ucHJvcHNcbn0pID0+IHtcbiAgY29uc3QgeyBpc0RhcmtUaGVtZSB9ID0gdXNlQ29sb3JNb2RlKClcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbHN4KGNsYXNzTmFtZSwgJ21keC1zaG93Y2FzZScpfSB7Li4ucHJvcHN9PlxuICAgICAge2l0ZW1zLm1hcCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgbG9nb1NyYyA9IGl0ZW0ubG9nbyA/PyBpdGVtLmxvZ29EYXJrXG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT1cIm1keC1zaG93Y2FzZV9faXRlbVwiPlxuICAgICAgICAgICAgPGRpdiBrZXk9e2luZGV4fSBjbGFzc05hbWU9XCJtZHgtc2hvd2Nhc2VfX2l0ZW0taW5uZXJcIj5cbiAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIHNyYz17KGlzRGFya1RoZW1lID8gaXRlbS5sb2dvRGFyayA6IGl0ZW0ubG9nbykgPz8gbG9nb1NyY31cbiAgICAgICAgICAgICAgICBhbHQ9e3R5cGVvZiBpdGVtLm5hbWUgPT09ICdzdHJpbmcnID8gaXRlbS5uYW1lIDogJ2ltYWdlJ31cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJtZHgtc2hvd2Nhc2VfX2l0ZW0tbG9nb1wiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgICAgICAgICAgdmFyaWFudD1cImgzXCJcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ9XCJoMlwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibWR4LXNob3djYXNlX19pdGVtLW5hbWVcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2l0ZW0ubmFtZX1cbiAgICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJzdWJ0aXRsZTFcIlxuICAgICAgICAgICAgICAgIGNvbXBvbmVudD1cInBcIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1keC1zaG93Y2FzZV9faXRlbS1kZXNjcmlwdGlvblwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7aXRlbS5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICAgIH0pfVxuICAgIDwvZGl2PlxuICApXG59XG4iXX0=
