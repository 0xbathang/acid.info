"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modal = void 0;
const tslib_1 = require("tslib");
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = tslib_1.__importDefault(require("react"));
const react_use_1 = require("react-use");
const useHydrated_1 = require("../../lib/useHydrated");
const Portal_1 = require("../Portal/Portal");
require("./Modal.scss");
const Modal = ({ open = false, onClose, keepMounted = false, className, children, ...props }) => {
    const hydrated = (0, useHydrated_1.useHydrated)();
    const handleClose = () => {
        onClose && onClose();
    };
    (0, react_use_1.useKeyPressEvent)((key) => key.code === 'Escape', (event) => {
        handleClose();
    });
    if (!hydrated)
        return react_1.default.createElement(react_1.default.Fragment, null);
    if (!open && !keepMounted)
        return react_1.default.createElement(react_1.default.Fragment, null);
    return (react_1.default.createElement(Portal_1.Portal, { containerId: "lsd-presentation", id: props.id },
        react_1.default.createElement("div", { className: (0, clsx_1.default)(className, 'l-modal', open && 'l-modal--open'), ...props },
            react_1.default.createElement("div", { className: "l-modal__container" },
                react_1.default.createElement("div", { className: "l-modal__content" }, children),
                react_1.default.createElement("div", { className: "l-modal__backdrop", onClick: handleClose })))));
};
exports.Modal = Modal;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvY29tcG9uZW50cy9Nb2RhbC9Nb2RhbC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHdEQUF1QjtBQUN2QiwwREFBeUI7QUFDekIseUNBQTRDO0FBQzVDLHVEQUFtRDtBQUNuRCw2Q0FBeUM7QUFDekMsd0JBQXFCO0FBUWQsTUFBTSxLQUFLLEdBQXlCLENBQUMsRUFDMUMsSUFBSSxHQUFHLEtBQUssRUFDWixPQUFPLEVBQ1AsV0FBVyxHQUFHLEtBQUssRUFDbkIsU0FBUyxFQUNULFFBQVEsRUFDUixHQUFHLEtBQUssRUFDVCxFQUFFLEVBQUU7SUFDSCxNQUFNLFFBQVEsR0FBRyxJQUFBLHlCQUFXLEdBQUUsQ0FBQTtJQUU5QixNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUU7UUFDdkIsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFBO0lBQ3RCLENBQUMsQ0FBQTtJQUVELElBQUEsNEJBQWdCLEVBQ2QsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUM5QixDQUFDLEtBQUssRUFBRSxFQUFFO1FBQ1IsV0FBVyxFQUFFLENBQUE7SUFDZixDQUFDLENBQ0YsQ0FBQTtJQUVELElBQUksQ0FBQyxRQUFRO1FBQUUsT0FBTyw2REFBSyxDQUFBO0lBQzNCLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXO1FBQUUsT0FBTyw2REFBSyxDQUFBO0lBRXZDLE9BQU8sQ0FDTCw4QkFBQyxlQUFNLElBQUMsV0FBVyxFQUFDLGtCQUFrQixFQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsRUFBRTtRQUNqRCx1Q0FDRSxTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxJQUFJLElBQUksZUFBZSxDQUFDLEtBQ3pELEtBQWE7WUFFbEIsdUNBQUssU0FBUyxFQUFDLG9CQUFvQjtnQkFDakMsdUNBQUssU0FBUyxFQUFDLGtCQUFrQixJQUFFLFFBQVEsQ0FBTztnQkFDbEQsdUNBQUssU0FBUyxFQUFDLG1CQUFtQixFQUFDLE9BQU8sRUFBRSxXQUFXLEdBQUksQ0FDdkQsQ0FDRixDQUNDLENBQ1YsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQXJDWSxRQUFBLEtBQUssU0FxQ2pCIiwiZmlsZSI6ImNsaWVudC9jb21wb25lbnRzL01vZGFsL01vZGFsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZUtleVByZXNzRXZlbnQgfSBmcm9tICdyZWFjdC11c2UnXG5pbXBvcnQgeyB1c2VIeWRyYXRlZCB9IGZyb20gJy4uLy4uL2xpYi91c2VIeWRyYXRlZCdcbmltcG9ydCB7IFBvcnRhbCB9IGZyb20gJy4uL1BvcnRhbC9Qb3J0YWwnXG5pbXBvcnQgJy4vTW9kYWwuc2NzcydcblxuZXhwb3J0IHR5cGUgTW9kYWxQcm9wcyA9IFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PiAmIHtcbiAgb3Blbj86IGJvb2xlYW5cbiAgb25DbG9zZT86ICgpID0+IHZvaWRcbiAga2VlcE1vdW50ZWQ/OiBib29sZWFuXG59XG5cbmV4cG9ydCBjb25zdCBNb2RhbDogUmVhY3QuRkM8TW9kYWxQcm9wcz4gPSAoe1xuICBvcGVuID0gZmFsc2UsXG4gIG9uQ2xvc2UsXG4gIGtlZXBNb3VudGVkID0gZmFsc2UsXG4gIGNsYXNzTmFtZSxcbiAgY2hpbGRyZW4sXG4gIC4uLnByb3BzXG59KSA9PiB7XG4gIGNvbnN0IGh5ZHJhdGVkID0gdXNlSHlkcmF0ZWQoKVxuXG4gIGNvbnN0IGhhbmRsZUNsb3NlID0gKCkgPT4ge1xuICAgIG9uQ2xvc2UgJiYgb25DbG9zZSgpXG4gIH1cblxuICB1c2VLZXlQcmVzc0V2ZW50KFxuICAgIChrZXkpID0+IGtleS5jb2RlID09PSAnRXNjYXBlJyxcbiAgICAoZXZlbnQpID0+IHtcbiAgICAgIGhhbmRsZUNsb3NlKClcbiAgICB9LFxuICApXG5cbiAgaWYgKCFoeWRyYXRlZCkgcmV0dXJuIDw+PC8+XG4gIGlmICghb3BlbiAmJiAha2VlcE1vdW50ZWQpIHJldHVybiA8PjwvPlxuXG4gIHJldHVybiAoXG4gICAgPFBvcnRhbCBjb250YWluZXJJZD1cImxzZC1wcmVzZW50YXRpb25cIiBpZD17cHJvcHMuaWR9PlxuICAgICAgPGRpdlxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goY2xhc3NOYW1lLCAnbC1tb2RhbCcsIG9wZW4gJiYgJ2wtbW9kYWwtLW9wZW4nKX1cbiAgICAgICAgey4uLihwcm9wcyBhcyBhbnkpfVxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImwtbW9kYWxfX2NvbnRhaW5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibC1tb2RhbF9fY29udGVudFwiPntjaGlsZHJlbn08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImwtbW9kYWxfX2JhY2tkcm9wXCIgb25DbGljaz17aGFuZGxlQ2xvc2V9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Qb3J0YWw+XG4gIClcbn1cbiJdfQ==
