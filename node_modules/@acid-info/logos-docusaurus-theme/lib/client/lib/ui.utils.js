"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.calcHeroInfoMb = exports.isMobile = exports.generateTextShadow = exports.isTouchDevice = exports.calcScrollThreshold = exports.mapFloat = exports.random = void 0;
const random = (min, max) => {
    return Math.random() * (max - min) + min;
};
exports.random = random;
const mapFloat = (value, inMin, inMax, outMin, outMax) => {
    return ((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;
};
exports.mapFloat = mapFloat;
const calcScrollThreshold = () => {
    return window.innerHeight * 0.4;
};
exports.calcScrollThreshold = calcScrollThreshold;
const isTouchDevice = () => {
    if (typeof window === 'undefined')
        return false;
    return ('ontouchstart' in window ||
        navigator.maxTouchPoints > 0 ||
        // @ts-ignore
        (navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 0));
};
exports.isTouchDevice = isTouchDevice;
const generateTextShadow = (steps) => {
    let shadows = '';
    for (let i = 0; i < steps; i++) {
        let colorValue = Math.floor((i / (steps - 1)) * 255); // Generate a value between 0 and 255
        let shadow = `${-i * 5}px ${-i * 5}px 0px rgb(${colorValue}, ${colorValue}, ${colorValue})`;
        shadows += (i === 0 ? '' : ', ') + shadow;
    }
    return shadows;
};
exports.generateTextShadow = generateTextShadow;
const isMobile = () => {
    if (typeof window === 'undefined')
        return false;
    return window.innerWidth < 997;
};
exports.isMobile = isMobile;
const calcHeroInfoMb = (sy) => {
    return (0, exports.mapFloat)(scrollY, 0, (0, exports.calcScrollThreshold)(), 0, 100);
};
exports.calcHeroInfoMb = calcHeroInfoMb;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvbGliL3VpLnV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFPLE1BQU0sTUFBTSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFO0lBQ2pDLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQTtBQUMxQyxDQUFDLENBQUE7QUFGWSxRQUFBLE1BQU0sVUFFbEI7QUFFTSxNQUFNLFFBQVEsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRTtJQUM5RCxPQUFPLENBQUMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxNQUFNLENBQUE7QUFDekUsQ0FBQyxDQUFBO0FBRlksUUFBQSxRQUFRLFlBRXBCO0FBRU0sTUFBTSxtQkFBbUIsR0FBRyxHQUFHLEVBQUU7SUFDdEMsT0FBTyxNQUFNLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQTtBQUNqQyxDQUFDLENBQUE7QUFGWSxRQUFBLG1CQUFtQix1QkFFL0I7QUFFTSxNQUFNLGFBQWEsR0FBRyxHQUFHLEVBQUU7SUFDaEMsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXO1FBQUUsT0FBTyxLQUFLLENBQUE7SUFDL0MsT0FBTyxDQUNMLGNBQWMsSUFBSSxNQUFNO1FBQ3hCLFNBQVMsQ0FBQyxjQUFjLEdBQUcsQ0FBQztRQUM1QixhQUFhO1FBQ2IsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLElBQUksU0FBUyxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxDQUMvRCxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBUlksUUFBQSxhQUFhLGlCQVF6QjtBQUVNLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxLQUFhLEVBQVUsRUFBRTtJQUMxRCxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUE7SUFDaEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM5QixJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUEsQ0FBQyxxQ0FBcUM7UUFDMUYsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQ3BCLENBQUMsQ0FBQyxHQUFHLENBQ1AsY0FBYyxVQUFVLEtBQUssVUFBVSxLQUFLLFVBQVUsR0FBRyxDQUFBO1FBQ3pELE9BQU8sSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFBO0tBQzFDO0lBQ0QsT0FBTyxPQUFPLENBQUE7QUFDaEIsQ0FBQyxDQUFBO0FBVlksUUFBQSxrQkFBa0Isc0JBVTlCO0FBRU0sTUFBTSxRQUFRLEdBQUcsR0FBRyxFQUFFO0lBQzNCLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVztRQUFFLE9BQU8sS0FBSyxDQUFBO0lBQy9DLE9BQU8sTUFBTSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUE7QUFDaEMsQ0FBQyxDQUFBO0FBSFksUUFBQSxRQUFRLFlBR3BCO0FBRU0sTUFBTSxjQUFjLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNuQyxPQUFPLElBQUEsZ0JBQVEsRUFBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLElBQUEsMkJBQW1CLEdBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUE7QUFDNUQsQ0FBQyxDQUFBO0FBRlksUUFBQSxjQUFjLGtCQUUxQiIsImZpbGUiOiJjbGllbnQvbGliL3VpLnV0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJhbmRvbSA9IChtaW4sIG1heCkgPT4ge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluXG59XG5cbmV4cG9ydCBjb25zdCBtYXBGbG9hdCA9ICh2YWx1ZSwgaW5NaW4sIGluTWF4LCBvdXRNaW4sIG91dE1heCkgPT4ge1xuICByZXR1cm4gKCh2YWx1ZSAtIGluTWluKSAqIChvdXRNYXggLSBvdXRNaW4pKSAvIChpbk1heCAtIGluTWluKSArIG91dE1pblxufVxuXG5leHBvcnQgY29uc3QgY2FsY1Njcm9sbFRocmVzaG9sZCA9ICgpID0+IHtcbiAgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodCAqIDAuNFxufVxuXG5leHBvcnQgY29uc3QgaXNUb3VjaERldmljZSA9ICgpID0+IHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmFsc2VcbiAgcmV0dXJuIChcbiAgICAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgfHxcbiAgICBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPiAwIHx8XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIChuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cyAmJiBuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cyA+IDApXG4gIClcbn1cblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlVGV4dFNoYWRvdyA9IChzdGVwczogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgbGV0IHNoYWRvd3MgPSAnJ1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ZXBzOyBpKyspIHtcbiAgICBsZXQgY29sb3JWYWx1ZSA9IE1hdGguZmxvb3IoKGkgLyAoc3RlcHMgLSAxKSkgKiAyNTUpIC8vIEdlbmVyYXRlIGEgdmFsdWUgYmV0d2VlbiAwIGFuZCAyNTVcbiAgICBsZXQgc2hhZG93ID0gYCR7LWkgKiA1fXB4ICR7XG4gICAgICAtaSAqIDVcbiAgICB9cHggMHB4IHJnYigke2NvbG9yVmFsdWV9LCAke2NvbG9yVmFsdWV9LCAke2NvbG9yVmFsdWV9KWBcbiAgICBzaGFkb3dzICs9IChpID09PSAwID8gJycgOiAnLCAnKSArIHNoYWRvd1xuICB9XG4gIHJldHVybiBzaGFkb3dzXG59XG5cbmV4cG9ydCBjb25zdCBpc01vYmlsZSA9ICgpID0+IHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmFsc2VcbiAgcmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoIDwgOTk3XG59XG5cbmV4cG9ydCBjb25zdCBjYWxjSGVyb0luZm9NYiA9IChzeSkgPT4ge1xuICByZXR1cm4gbWFwRmxvYXQoc2Nyb2xsWSwgMCwgY2FsY1Njcm9sbFRocmVzaG9sZCgpLCAwLCAxMDApXG59XG4iXX0=
