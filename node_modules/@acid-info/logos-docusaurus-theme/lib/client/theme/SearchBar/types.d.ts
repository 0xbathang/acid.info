export declare type SearchDocument = {
    id: string;
    title: string;
    url: string;
    hash?: string;
    parentId?: string;
    breadcrumb?: string;
    sectionTitle?: string;
};
export declare enum SearchDocumentType {
    Title = "title",
    Heading = "heading",
    Paragraph = "paragraph"
}
export declare type SearchResultBase = {
    document: SearchDocument;
    type: SearchDocumentType;
    page: SearchDocument | undefined | false;
    metadata: MatchMetadata;
    tokens: string[];
    highlighted: string;
};
export declare type SearchResultExtra = {
    score: number;
    index: number;
    isInterOfTree: boolean;
    isLastOfTree: boolean;
};
export declare type SearchResult = SearchResultBase & SearchResultExtra;
export declare type MetadataPosition = [number, number];
export interface MatchMetadata {
    [token: string]: {
        [field: string]: {
            position: MetadataPosition[];
        };
    };
}
export declare type SearchResultGroupItem = {
    type: SearchResult['type'];
    url: string;
    hash: string;
    href: string;
    title: string;
    score: number;
    content: string;
};
export declare type SearchResultGroupItemWithCategory = SearchResultGroupItem & {
    category: string;
};
export declare type GroupedSearchResult = [string, SearchResultGroupItem[]][];
