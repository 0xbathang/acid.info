"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const lsd_react_1 = require("@acid-info/lsd-react");
const theme_common_1 = require("@docusaurus/theme-common");
const internal_1 = require("@docusaurus/theme-common/internal");
const ColorModeToggle_1 = tslib_1.__importDefault(require("@theme/Navbar/ColorModeToggle"));
const Logo_1 = tslib_1.__importDefault(require("@theme/Navbar/Logo"));
const Toggle_1 = tslib_1.__importDefault(require("@theme/Navbar/MobileSidebar/Toggle"));
const NavbarItem_1 = tslib_1.__importDefault(require("@theme/NavbarItem"));
const SearchBar_1 = tslib_1.__importDefault(require("@theme/SearchBar"));
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = tslib_1.__importDefault(require("react"));
const useHydrated_1 = require("../../../lib/useHydrated");
const styles_module_scss_1 = tslib_1.__importDefault(require("./styles.module.scss"));
function useNavbarItems() {
    // TODO temporary casting until ThemeConfig type is improved
    return (0, theme_common_1.useThemeConfig)().navbar.items;
}
function NavbarItems({ items }) {
    return (react_1.default.createElement(react_1.default.Fragment, null, items.map((item, i) => (react_1.default.createElement(theme_common_1.ErrorCauseBoundary, { key: i, onError: (error) => new Error(`A theme navbar item failed to render.
Please double-check the following navbar item (themeConfig.navbar.items) of your Docusaurus config:
${JSON.stringify(item, null, 2)}`, 
        //@ts-ignore
        { cause: error }) },
        react_1.default.createElement(NavbarItem_1.default, { ...item }))))));
}
function NavbarContent() {
    const hydrated = (0, useHydrated_1.useHydrated)();
    const mobileSidebar = (0, internal_1.useNavbarMobileSidebar)();
    const allItems = useNavbarItems();
    const [leftItems, rightItems] = (0, internal_1.splitNavbarItems)(allItems.filter((item) => !['search'].includes(item.type ?? '')));
    const searchBarItem = allItems.find((item) => item.type === 'search');
    return (react_1.default.createElement("div", { className: "navbar__inner" },
        react_1.default.createElement("div", { className: "navbar__left" },
            react_1.default.createElement(Logo_1.default, null)),
        react_1.default.createElement("div", { className: "navbar__left-items" },
            react_1.default.createElement(NavbarItems, { items: leftItems })),
        react_1.default.createElement("div", { className: "navbar__right-items" },
            react_1.default.createElement(NavbarItems, { items: rightItems }),
            react_1.default.createElement(lsd_react_1.IconButtonGroup, { className: styles_module_scss_1.default.iconButtonGroup, size: "medium" },
                react_1.default.createElement(ColorModeToggle_1.default, { key: "color-toggle", className: (0, clsx_1.default)(styles_module_scss_1.default.colorModeToggle, 'navbar__color-mode-toggle') }),
                hydrated && (react_1.default.createElement(react_1.default.Fragment, { key: "search" }, searchBarItem && react_1.default.createElement(SearchBar_1.default, null))),
                react_1.default.createElement(react_1.default.Fragment, { key: "mobile-sidebar-toggle" }, !mobileSidebar.disabled && react_1.default.createElement(Toggle_1.default, null))))));
}
exports.default = NavbarContent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvdGhlbWUvTmF2YmFyL0NvbnRlbnQvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG9EQUFzRDtBQUN0RCwyREFBNkU7QUFDN0UsZ0VBRzBDO0FBQzFDLDRGQUFpRTtBQUNqRSxzRUFBMkM7QUFDM0Msd0ZBQTBFO0FBQzFFLDJFQUEwQztBQUMxQyx5RUFBd0M7QUFDeEMsd0RBQXVCO0FBQ3ZCLDBEQUF5QjtBQUN6QiwwREFBc0Q7QUFDdEQsc0ZBQXlDO0FBRXpDLFNBQVMsY0FBYztJQUNyQiw0REFBNEQ7SUFDNUQsT0FBTyxJQUFBLDZCQUFjLEdBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFBO0FBQ3RDLENBQUM7QUFFRCxTQUFTLFdBQVcsQ0FBQyxFQUFFLEtBQUssRUFBRTtJQUM1QixPQUFPLENBQ0wsOERBQ0csS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQ3RCLDhCQUFDLGlDQUFrQixJQUNqQixHQUFHLEVBQUUsQ0FBQyxFQUNOLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQ2pCLElBQUksS0FBSyxDQUNQOztFQUVaLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRTtRQUNuQixZQUFZO1FBQ1osRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQ2pCO1FBR0gsOEJBQUMsb0JBQVUsT0FBSyxJQUFJLEdBQUksQ0FDTCxDQUN0QixDQUFDLENBQ0QsQ0FDSixDQUFBO0FBQ0gsQ0FBQztBQUVELFNBQXdCLGFBQWE7SUFDbkMsTUFBTSxRQUFRLEdBQUcsSUFBQSx5QkFBVyxHQUFFLENBQUE7SUFDOUIsTUFBTSxhQUFhLEdBQUcsSUFBQSxpQ0FBc0IsR0FBRSxDQUFBO0lBQzlDLE1BQU0sUUFBUSxHQUFHLGNBQWMsRUFBRSxDQUFBO0lBQ2pDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLEdBQUcsSUFBQSwyQkFBZ0IsRUFDOUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQ2pFLENBQUE7SUFDRCxNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFBO0lBRXJFLE9BQU8sQ0FDTCx1Q0FBSyxTQUFTLEVBQUMsZUFBZTtRQUM1Qix1Q0FBSyxTQUFTLEVBQUMsY0FBYztZQUMzQiw4QkFBQyxjQUFVLE9BQUcsQ0FDVjtRQUNOLHVDQUFLLFNBQVMsRUFBQyxvQkFBb0I7WUFDakMsOEJBQUMsV0FBVyxJQUFDLEtBQUssRUFBRSxTQUFTLEdBQUksQ0FDN0I7UUFDTix1Q0FBSyxTQUFTLEVBQUMscUJBQXFCO1lBQ2xDLDhCQUFDLFdBQVcsSUFBQyxLQUFLLEVBQUUsVUFBVSxHQUFJO1lBRWxDLDhCQUFDLDJCQUFlLElBQUMsU0FBUyxFQUFFLDRCQUFNLENBQUMsZUFBZSxFQUFFLElBQUksRUFBQyxRQUFRO2dCQUMvRCw4QkFBQyx5QkFBcUIsSUFDcEIsR0FBRyxFQUFDLGNBQWMsRUFDbEIsU0FBUyxFQUFFLElBQUEsY0FBSSxFQUNiLDRCQUFNLENBQUMsZUFBZSxFQUN0QiwyQkFBMkIsQ0FDNUIsR0FDRDtnQkFDRCxRQUFRLElBQUksQ0FDWCw4QkFBQyxlQUFLLENBQUMsUUFBUSxJQUFDLEdBQUcsRUFBQyxRQUFRLElBQ3pCLGFBQWEsSUFBSSw4QkFBQyxtQkFBUyxPQUFHLENBQ2hCLENBQ2xCO2dCQUNELDhCQUFDLGVBQUssQ0FBQyxRQUFRLElBQUMsR0FBRyxFQUFDLHVCQUF1QixJQUN4QyxDQUFDLGFBQWEsQ0FBQyxRQUFRLElBQUksOEJBQUMsZ0JBQXlCLE9BQUcsQ0FDMUMsQ0FDRCxDQUNkLENBQ0YsQ0FDUCxDQUFBO0FBQ0gsQ0FBQztBQXhDRCxnQ0F3Q0MiLCJmaWxlIjoiY2xpZW50L3RoZW1lL05hdmJhci9Db250ZW50L2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSWNvbkJ1dHRvbkdyb3VwIH0gZnJvbSAnQGFjaWQtaW5mby9sc2QtcmVhY3QnXG5pbXBvcnQgeyBFcnJvckNhdXNlQm91bmRhcnksIHVzZVRoZW1lQ29uZmlnIH0gZnJvbSAnQGRvY3VzYXVydXMvdGhlbWUtY29tbW9uJ1xuaW1wb3J0IHtcbiAgc3BsaXROYXZiYXJJdGVtcyxcbiAgdXNlTmF2YmFyTW9iaWxlU2lkZWJhcixcbn0gZnJvbSAnQGRvY3VzYXVydXMvdGhlbWUtY29tbW9uL2ludGVybmFsJ1xuaW1wb3J0IE5hdmJhckNvbG9yTW9kZVRvZ2dsZSBmcm9tICdAdGhlbWUvTmF2YmFyL0NvbG9yTW9kZVRvZ2dsZSdcbmltcG9ydCBOYXZiYXJMb2dvIGZyb20gJ0B0aGVtZS9OYXZiYXIvTG9nbydcbmltcG9ydCBOYXZiYXJNb2JpbGVTaWRlYmFyVG9nZ2xlIGZyb20gJ0B0aGVtZS9OYXZiYXIvTW9iaWxlU2lkZWJhci9Ub2dnbGUnXG5pbXBvcnQgTmF2YmFySXRlbSBmcm9tICdAdGhlbWUvTmF2YmFySXRlbSdcbmltcG9ydCBTZWFyY2hCYXIgZnJvbSAnQHRoZW1lL1NlYXJjaEJhcidcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VIeWRyYXRlZCB9IGZyb20gJy4uLy4uLy4uL2xpYi91c2VIeWRyYXRlZCdcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMubW9kdWxlLnNjc3MnXG5cbmZ1bmN0aW9uIHVzZU5hdmJhckl0ZW1zKCkge1xuICAvLyBUT0RPIHRlbXBvcmFyeSBjYXN0aW5nIHVudGlsIFRoZW1lQ29uZmlnIHR5cGUgaXMgaW1wcm92ZWRcbiAgcmV0dXJuIHVzZVRoZW1lQ29uZmlnKCkubmF2YmFyLml0ZW1zXG59XG5cbmZ1bmN0aW9uIE5hdmJhckl0ZW1zKHsgaXRlbXMgfSkge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7aXRlbXMubWFwKChpdGVtLCBpKSA9PiAoXG4gICAgICAgIDxFcnJvckNhdXNlQm91bmRhcnlcbiAgICAgICAgICBrZXk9e2l9XG4gICAgICAgICAgb25FcnJvcj17KGVycm9yKSA9PlxuICAgICAgICAgICAgbmV3IEVycm9yKFxuICAgICAgICAgICAgICBgQSB0aGVtZSBuYXZiYXIgaXRlbSBmYWlsZWQgdG8gcmVuZGVyLlxuUGxlYXNlIGRvdWJsZS1jaGVjayB0aGUgZm9sbG93aW5nIG5hdmJhciBpdGVtICh0aGVtZUNvbmZpZy5uYXZiYXIuaXRlbXMpIG9mIHlvdXIgRG9jdXNhdXJ1cyBjb25maWc6XG4ke0pTT04uc3RyaW5naWZ5KGl0ZW0sIG51bGwsIDIpfWAsXG4gICAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgICB7IGNhdXNlOiBlcnJvciB9LFxuICAgICAgICAgICAgKVxuICAgICAgICAgIH1cbiAgICAgICAgPlxuICAgICAgICAgIDxOYXZiYXJJdGVtIHsuLi5pdGVtfSAvPlxuICAgICAgICA8L0Vycm9yQ2F1c2VCb3VuZGFyeT5cbiAgICAgICkpfVxuICAgIDwvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmJhckNvbnRlbnQoKSB7XG4gIGNvbnN0IGh5ZHJhdGVkID0gdXNlSHlkcmF0ZWQoKVxuICBjb25zdCBtb2JpbGVTaWRlYmFyID0gdXNlTmF2YmFyTW9iaWxlU2lkZWJhcigpXG4gIGNvbnN0IGFsbEl0ZW1zID0gdXNlTmF2YmFySXRlbXMoKVxuICBjb25zdCBbbGVmdEl0ZW1zLCByaWdodEl0ZW1zXSA9IHNwbGl0TmF2YmFySXRlbXMoXG4gICAgYWxsSXRlbXMuZmlsdGVyKChpdGVtKSA9PiAhWydzZWFyY2gnXS5pbmNsdWRlcyhpdGVtLnR5cGUgPz8gJycpKSxcbiAgKVxuICBjb25zdCBzZWFyY2hCYXJJdGVtID0gYWxsSXRlbXMuZmluZCgoaXRlbSkgPT4gaXRlbS50eXBlID09PSAnc2VhcmNoJylcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibmF2YmFyX19pbm5lclwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYXZiYXJfX2xlZnRcIj5cbiAgICAgICAgPE5hdmJhckxvZ28gLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYXZiYXJfX2xlZnQtaXRlbXNcIj5cbiAgICAgICAgPE5hdmJhckl0ZW1zIGl0ZW1zPXtsZWZ0SXRlbXN9IC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmF2YmFyX19yaWdodC1pdGVtc1wiPlxuICAgICAgICA8TmF2YmFySXRlbXMgaXRlbXM9e3JpZ2h0SXRlbXN9IC8+XG5cbiAgICAgICAgPEljb25CdXR0b25Hcm91cCBjbGFzc05hbWU9e3N0eWxlcy5pY29uQnV0dG9uR3JvdXB9IHNpemU9XCJtZWRpdW1cIj5cbiAgICAgICAgICA8TmF2YmFyQ29sb3JNb2RlVG9nZ2xlXG4gICAgICAgICAgICBrZXk9XCJjb2xvci10b2dnbGVcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHN4KFxuICAgICAgICAgICAgICBzdHlsZXMuY29sb3JNb2RlVG9nZ2xlLFxuICAgICAgICAgICAgICAnbmF2YmFyX19jb2xvci1tb2RlLXRvZ2dsZScsXG4gICAgICAgICAgICApfVxuICAgICAgICAgIC8+XG4gICAgICAgICAge2h5ZHJhdGVkICYmIChcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9XCJzZWFyY2hcIj5cbiAgICAgICAgICAgICAge3NlYXJjaEJhckl0ZW0gJiYgPFNlYXJjaEJhciAvPn1cbiAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQga2V5PVwibW9iaWxlLXNpZGViYXItdG9nZ2xlXCI+XG4gICAgICAgICAgICB7IW1vYmlsZVNpZGViYXIuZGlzYWJsZWQgJiYgPE5hdmJhck1vYmlsZVNpZGViYXJUb2dnbGUgLz59XG4gICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgPC9JY29uQnV0dG9uR3JvdXA+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl19
