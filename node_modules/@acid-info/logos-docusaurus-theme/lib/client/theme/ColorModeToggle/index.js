"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const lsd_react_1 = require("@acid-info/lsd-react");
const Translate_1 = require("@docusaurus/Translate");
const useIsBrowser_1 = tslib_1.__importDefault(require("@docusaurus/useIsBrowser"));
const DarkMode_1 = tslib_1.__importDefault(require("@theme/Icon/DarkMode"));
const LightMode_1 = tslib_1.__importDefault(require("@theme/Icon/LightMode"));
const clsx_1 = tslib_1.__importDefault(require("clsx"));
const react_1 = tslib_1.__importDefault(require("react"));
const styles_module_scss_1 = tslib_1.__importDefault(require("./styles.module.scss"));
function ColorModeToggle({ className, buttonClassName, value, onChange }) {
    const isBrowser = (0, useIsBrowser_1.default)();
    const title = (0, Translate_1.translate)({
        message: 'Switch between dark and light mode (currently {mode})',
        id: 'theme.colorToggle.ariaLabel',
        description: 'The ARIA label for the navbar color mode toggle',
    }, {
        mode: value === 'dark'
            ? (0, Translate_1.translate)({
                message: 'dark mode',
                id: 'theme.colorToggle.ariaLabel.mode.dark',
                description: 'The name for the dark color mode',
            })
            : (0, Translate_1.translate)({
                message: 'light mode',
                id: 'theme.colorToggle.ariaLabel.mode.light',
                description: 'The name for the light color mode',
            }),
    });
    return (react_1.default.createElement(lsd_react_1.IconButton, { className: (0, clsx_1.default)('clean-btn', styles_module_scss_1.default.toggle, className, !isBrowser && styles_module_scss_1.default.toggleButtonDisabled, buttonClassName), type: "button", onClick: () => onChange(value === 'dark' ? 'light' : 'dark'), disabled: !isBrowser, title: title, "aria-label": title, "aria-live": "polite" },
        react_1.default.createElement(LightMode_1.default, { className: (0, clsx_1.default)(styles_module_scss_1.default.toggleIcon, styles_module_scss_1.default.lightToggleIcon) }),
        react_1.default.createElement(DarkMode_1.default, { className: (0, clsx_1.default)(styles_module_scss_1.default.toggleIcon, styles_module_scss_1.default.darkToggleIcon) })));
}
exports.default = react_1.default.memo(ColorModeToggle);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvdGhlbWUvQ29sb3JNb2RlVG9nZ2xlL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBaUQ7QUFDakQscURBQWlEO0FBQ2pELG9GQUFtRDtBQUNuRCw0RUFBK0M7QUFDL0MsOEVBQWlEO0FBQ2pELHdEQUF1QjtBQUN2QiwwREFBeUI7QUFDekIsc0ZBQXlDO0FBRXpDLFNBQVMsZUFBZSxDQUFDLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFO0lBQ3RFLE1BQU0sU0FBUyxHQUFHLElBQUEsc0JBQVksR0FBRSxDQUFBO0lBQ2hDLE1BQU0sS0FBSyxHQUFHLElBQUEscUJBQVMsRUFDckI7UUFDRSxPQUFPLEVBQUUsdURBQXVEO1FBQ2hFLEVBQUUsRUFBRSw2QkFBNkI7UUFDakMsV0FBVyxFQUFFLGlEQUFpRDtLQUMvRCxFQUNEO1FBQ0UsSUFBSSxFQUNGLEtBQUssS0FBSyxNQUFNO1lBQ2QsQ0FBQyxDQUFDLElBQUEscUJBQVMsRUFBQztnQkFDUixPQUFPLEVBQUUsV0FBVztnQkFDcEIsRUFBRSxFQUFFLHVDQUF1QztnQkFDM0MsV0FBVyxFQUFFLGtDQUFrQzthQUNoRCxDQUFDO1lBQ0osQ0FBQyxDQUFDLElBQUEscUJBQVMsRUFBQztnQkFDUixPQUFPLEVBQUUsWUFBWTtnQkFDckIsRUFBRSxFQUFFLHdDQUF3QztnQkFDNUMsV0FBVyxFQUFFLG1DQUFtQzthQUNqRCxDQUFDO0tBQ1QsQ0FDRixDQUFBO0lBRUQsT0FBTyxDQUNMLDhCQUFDLHNCQUFVLElBQ1QsU0FBUyxFQUFFLElBQUEsY0FBSSxFQUNiLFdBQVcsRUFDWCw0QkFBTSxDQUFDLE1BQU0sRUFDYixTQUFTLEVBQ1QsQ0FBQyxTQUFTLElBQUksNEJBQU0sQ0FBQyxvQkFBb0IsRUFDekMsZUFBZSxDQUNoQixFQUNELElBQUksRUFBQyxRQUFRLEVBQ2IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUM1RCxRQUFRLEVBQUUsQ0FBQyxTQUFTLEVBQ3BCLEtBQUssRUFBRSxLQUFLLGdCQUNBLEtBQUssZUFDUCxRQUFRO1FBRWxCLDhCQUFDLG1CQUFhLElBQ1osU0FBUyxFQUFFLElBQUEsY0FBSSxFQUFDLDRCQUFNLENBQUMsVUFBVSxFQUFFLDRCQUFNLENBQUMsZUFBZSxDQUFDLEdBQzFEO1FBQ0YsOEJBQUMsa0JBQVksSUFDWCxTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQUMsNEJBQU0sQ0FBQyxVQUFVLEVBQUUsNEJBQU0sQ0FBQyxjQUFjLENBQUMsR0FDekQsQ0FDUyxDQUNkLENBQUE7QUFDSCxDQUFDO0FBRUQsa0JBQWUsZUFBSyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQSIsImZpbGUiOiJjbGllbnQvdGhlbWUvQ29sb3JNb2RlVG9nZ2xlL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSWNvbkJ1dHRvbiB9IGZyb20gJ0BhY2lkLWluZm8vbHNkLXJlYWN0J1xuaW1wb3J0IHsgdHJhbnNsYXRlIH0gZnJvbSAnQGRvY3VzYXVydXMvVHJhbnNsYXRlJ1xuaW1wb3J0IHVzZUlzQnJvd3NlciBmcm9tICdAZG9jdXNhdXJ1cy91c2VJc0Jyb3dzZXInXG5pbXBvcnQgSWNvbkRhcmtNb2RlIGZyb20gJ0B0aGVtZS9JY29uL0RhcmtNb2RlJ1xuaW1wb3J0IEljb25MaWdodE1vZGUgZnJvbSAnQHRoZW1lL0ljb24vTGlnaHRNb2RlJ1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9zdHlsZXMubW9kdWxlLnNjc3MnXG5cbmZ1bmN0aW9uIENvbG9yTW9kZVRvZ2dsZSh7IGNsYXNzTmFtZSwgYnV0dG9uQ2xhc3NOYW1lLCB2YWx1ZSwgb25DaGFuZ2UgfSkge1xuICBjb25zdCBpc0Jyb3dzZXIgPSB1c2VJc0Jyb3dzZXIoKVxuICBjb25zdCB0aXRsZSA9IHRyYW5zbGF0ZShcbiAgICB7XG4gICAgICBtZXNzYWdlOiAnU3dpdGNoIGJldHdlZW4gZGFyayBhbmQgbGlnaHQgbW9kZSAoY3VycmVudGx5IHttb2RlfSknLFxuICAgICAgaWQ6ICd0aGVtZS5jb2xvclRvZ2dsZS5hcmlhTGFiZWwnLFxuICAgICAgZGVzY3JpcHRpb246ICdUaGUgQVJJQSBsYWJlbCBmb3IgdGhlIG5hdmJhciBjb2xvciBtb2RlIHRvZ2dsZScsXG4gICAgfSxcbiAgICB7XG4gICAgICBtb2RlOlxuICAgICAgICB2YWx1ZSA9PT0gJ2RhcmsnXG4gICAgICAgICAgPyB0cmFuc2xhdGUoe1xuICAgICAgICAgICAgICBtZXNzYWdlOiAnZGFyayBtb2RlJyxcbiAgICAgICAgICAgICAgaWQ6ICd0aGVtZS5jb2xvclRvZ2dsZS5hcmlhTGFiZWwubW9kZS5kYXJrJyxcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgbmFtZSBmb3IgdGhlIGRhcmsgY29sb3IgbW9kZScsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIDogdHJhbnNsYXRlKHtcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ2xpZ2h0IG1vZGUnLFxuICAgICAgICAgICAgICBpZDogJ3RoZW1lLmNvbG9yVG9nZ2xlLmFyaWFMYWJlbC5tb2RlLmxpZ2h0JyxcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgbmFtZSBmb3IgdGhlIGxpZ2h0IGNvbG9yIG1vZGUnLFxuICAgICAgICAgICAgfSksXG4gICAgfSxcbiAgKVxuXG4gIHJldHVybiAoXG4gICAgPEljb25CdXR0b25cbiAgICAgIGNsYXNzTmFtZT17Y2xzeChcbiAgICAgICAgJ2NsZWFuLWJ0bicsXG4gICAgICAgIHN0eWxlcy50b2dnbGUsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgIWlzQnJvd3NlciAmJiBzdHlsZXMudG9nZ2xlQnV0dG9uRGlzYWJsZWQsXG4gICAgICAgIGJ1dHRvbkNsYXNzTmFtZSxcbiAgICAgICl9XG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIG9uQ2xpY2s9eygpID0+IG9uQ2hhbmdlKHZhbHVlID09PSAnZGFyaycgPyAnbGlnaHQnIDogJ2RhcmsnKX1cbiAgICAgIGRpc2FibGVkPXshaXNCcm93c2VyfVxuICAgICAgdGl0bGU9e3RpdGxlfVxuICAgICAgYXJpYS1sYWJlbD17dGl0bGV9XG4gICAgICBhcmlhLWxpdmU9XCJwb2xpdGVcIlxuICAgID5cbiAgICAgIDxJY29uTGlnaHRNb2RlXG4gICAgICAgIGNsYXNzTmFtZT17Y2xzeChzdHlsZXMudG9nZ2xlSWNvbiwgc3R5bGVzLmxpZ2h0VG9nZ2xlSWNvbil9XG4gICAgICAvPlxuICAgICAgPEljb25EYXJrTW9kZVxuICAgICAgICBjbGFzc05hbWU9e2Nsc3goc3R5bGVzLnRvZ2dsZUljb24sIHN0eWxlcy5kYXJrVG9nZ2xlSWNvbil9XG4gICAgICAvPlxuICAgIDwvSWNvbkJ1dHRvbj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZWFjdC5tZW1vKENvbG9yTW9kZVRvZ2dsZSlcbiJdfQ==
