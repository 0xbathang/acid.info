"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const clsx_1 = tslib_1.__importDefault(require("clsx"));
// @ts-ignore: TODO, we need to make theme-classic have type: module
const copy_text_to_clipboard_1 = tslib_1.__importDefault(require("copy-text-to-clipboard"));
const Translate_1 = require("@docusaurus/Translate");
const Success_1 = tslib_1.__importDefault(require("@theme/Icon/Success"));
const styles_module_css_1 = tslib_1.__importDefault(require("./styles.module.css"));
const Icon_1 = require("../../../components/Icon");
function CopyButton({ code, className }) {
    const [isCopied, setIsCopied] = (0, react_1.useState)(false);
    const copyTimeout = (0, react_1.useRef)(undefined);
    const handleCopyCode = (0, react_1.useCallback)(() => {
        (0, copy_text_to_clipboard_1.default)(code);
        setIsCopied(true);
        copyTimeout.current = window.setTimeout(() => {
            setIsCopied(false);
        }, 1000);
    }, [code]);
    (0, react_1.useEffect)(() => () => window.clearTimeout(copyTimeout.current), []);
    return (react_1.default.createElement("button", { type: "button", "aria-label": isCopied
            ? (0, Translate_1.translate)({
                id: 'theme.CodeBlock.copied',
                message: 'Copied',
                description: 'The copied button label on code blocks',
            })
            : (0, Translate_1.translate)({
                id: 'theme.CodeBlock.copyButtonAriaLabel',
                message: 'Copy code to clipboard',
                description: 'The ARIA label for copy code blocks button',
            }), title: (0, Translate_1.translate)({
            id: 'theme.CodeBlock.copy',
            message: 'Copy',
            description: 'The copy button label on code blocks',
        }), className: (0, clsx_1.default)('clean-btn', className, styles_module_css_1.default.copyButton, isCopied && styles_module_css_1.default.copyButtonCopied), onClick: handleCopyCode },
        react_1.default.createElement("span", { className: styles_module_css_1.default.copyButtonIcons, "aria-hidden": "true" }, isCopied ? (react_1.default.createElement(Success_1.default, { className: styles_module_css_1.default.copyButtonSuccessIcon })) : (react_1.default.createElement(Icon_1.IconCopy, { className: styles_module_css_1.default.copyButtonIcon })))));
}
exports.default = CopyButton;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvdGhlbWUvQ29kZUJsb2NrL0NvcHlCdXR0b24vaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHVEQUF1RTtBQUN2RSx3REFBdUI7QUFDdkIsb0VBQW9FO0FBQ3BFLDRGQUF5QztBQUN6QyxxREFBaUQ7QUFDakQsMEVBQTZDO0FBQzdDLG9GQUF3QztBQUN4Qyx1REFBdUQ7QUFFdkQsU0FBd0IsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtJQUNwRCxNQUFNLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBQyxLQUFLLENBQUMsQ0FBQTtJQUMvQyxNQUFNLFdBQVcsR0FBRyxJQUFBLGNBQU0sRUFBcUIsU0FBUyxDQUFDLENBQUE7SUFFekQsTUFBTSxjQUFjLEdBQUcsSUFBQSxtQkFBVyxFQUFDLEdBQUcsRUFBRTtRQUN0QyxJQUFBLGdDQUFJLEVBQUMsSUFBSSxDQUFDLENBQUE7UUFDVixXQUFXLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDakIsV0FBVyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUMzQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDcEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ1YsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtJQUVWLElBQUEsaUJBQVMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUVuRSxPQUFPLENBQ0wsMENBQ0UsSUFBSSxFQUFDLFFBQVEsZ0JBRVgsUUFBUTtZQUNOLENBQUMsQ0FBQyxJQUFBLHFCQUFTLEVBQUM7Z0JBQ1IsRUFBRSxFQUFFLHdCQUF3QjtnQkFDNUIsT0FBTyxFQUFFLFFBQVE7Z0JBQ2pCLFdBQVcsRUFBRSx3Q0FBd0M7YUFDdEQsQ0FBQztZQUNKLENBQUMsQ0FBQyxJQUFBLHFCQUFTLEVBQUM7Z0JBQ1IsRUFBRSxFQUFFLHFDQUFxQztnQkFDekMsT0FBTyxFQUFFLHdCQUF3QjtnQkFDakMsV0FBVyxFQUFFLDRDQUE0QzthQUMxRCxDQUFDLEVBRVIsS0FBSyxFQUFFLElBQUEscUJBQVMsRUFBQztZQUNmLEVBQUUsRUFBRSxzQkFBc0I7WUFDMUIsT0FBTyxFQUFFLE1BQU07WUFDZixXQUFXLEVBQUUsc0NBQXNDO1NBQ3BELENBQUMsRUFDRixTQUFTLEVBQUUsSUFBQSxjQUFJLEVBQ2IsV0FBVyxFQUNYLFNBQVMsRUFDVCwyQkFBTSxDQUFDLFVBQVUsRUFDakIsUUFBUSxJQUFJLDJCQUFNLENBQUMsZ0JBQWdCLENBQ3BDLEVBQ0QsT0FBTyxFQUFFLGNBQWM7UUFFdkIsd0NBQU0sU0FBUyxFQUFFLDJCQUFNLENBQUMsZUFBZSxpQkFBYyxNQUFNLElBQ3hELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FDViw4QkFBQyxpQkFBVyxJQUFDLFNBQVMsRUFBRSwyQkFBTSxDQUFDLHFCQUFxQixHQUFJLENBQ3pELENBQUMsQ0FBQyxDQUFDLENBQ0YsOEJBQUMsZUFBUSxJQUFDLFNBQVMsRUFBRSwyQkFBTSxDQUFDLGNBQWMsR0FBSSxDQUMvQyxDQUNJLENBQ0EsQ0FDVixDQUFBO0FBQ0gsQ0FBQztBQXBERCw2QkFvREMiLCJmaWxlIjoiY2xpZW50L3RoZW1lL0NvZGVCbG9jay9Db3B5QnV0dG9uL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG4vLyBAdHMtaWdub3JlOiBUT0RPLCB3ZSBuZWVkIHRvIG1ha2UgdGhlbWUtY2xhc3NpYyBoYXZlIHR5cGU6IG1vZHVsZVxuaW1wb3J0IGNvcHkgZnJvbSAnY29weS10ZXh0LXRvLWNsaXBib2FyZCdcbmltcG9ydCB7IHRyYW5zbGF0ZSB9IGZyb20gJ0Bkb2N1c2F1cnVzL1RyYW5zbGF0ZSdcbmltcG9ydCBJY29uU3VjY2VzcyBmcm9tICdAdGhlbWUvSWNvbi9TdWNjZXNzJ1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5tb2R1bGUuY3NzJ1xuaW1wb3J0IHsgSWNvbkNvcHkgfSBmcm9tICdAbG9nb3MtdGhlbWUvY29tcG9uZW50cy9JY29uJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb3B5QnV0dG9uKHsgY29kZSwgY2xhc3NOYW1lIH0pIHtcbiAgY29uc3QgW2lzQ29waWVkLCBzZXRJc0NvcGllZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgY29weVRpbWVvdXQgPSB1c2VSZWY8bnVtYmVyIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpXG5cbiAgY29uc3QgaGFuZGxlQ29weUNvZGUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgY29weShjb2RlKVxuICAgIHNldElzQ29waWVkKHRydWUpXG4gICAgY29weVRpbWVvdXQuY3VycmVudCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHNldElzQ29waWVkKGZhbHNlKVxuICAgIH0sIDEwMDApXG4gIH0sIFtjb2RlXSlcblxuICB1c2VFZmZlY3QoKCkgPT4gKCkgPT4gd2luZG93LmNsZWFyVGltZW91dChjb3B5VGltZW91dC5jdXJyZW50KSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgIGFyaWEtbGFiZWw9e1xuICAgICAgICBpc0NvcGllZFxuICAgICAgICAgID8gdHJhbnNsYXRlKHtcbiAgICAgICAgICAgICAgaWQ6ICd0aGVtZS5Db2RlQmxvY2suY29waWVkJyxcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ0NvcGllZCcsXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGNvcGllZCBidXR0b24gbGFiZWwgb24gY29kZSBibG9ja3MnLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICA6IHRyYW5zbGF0ZSh7XG4gICAgICAgICAgICAgIGlkOiAndGhlbWUuQ29kZUJsb2NrLmNvcHlCdXR0b25BcmlhTGFiZWwnLFxuICAgICAgICAgICAgICBtZXNzYWdlOiAnQ29weSBjb2RlIHRvIGNsaXBib2FyZCcsXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIEFSSUEgbGFiZWwgZm9yIGNvcHkgY29kZSBibG9ja3MgYnV0dG9uJyxcbiAgICAgICAgICAgIH0pXG4gICAgICB9XG4gICAgICB0aXRsZT17dHJhbnNsYXRlKHtcbiAgICAgICAgaWQ6ICd0aGVtZS5Db2RlQmxvY2suY29weScsXG4gICAgICAgIG1lc3NhZ2U6ICdDb3B5JyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgY29weSBidXR0b24gbGFiZWwgb24gY29kZSBibG9ja3MnLFxuICAgICAgfSl9XG4gICAgICBjbGFzc05hbWU9e2Nsc3goXG4gICAgICAgICdjbGVhbi1idG4nLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlcy5jb3B5QnV0dG9uLFxuICAgICAgICBpc0NvcGllZCAmJiBzdHlsZXMuY29weUJ1dHRvbkNvcGllZCxcbiAgICAgICl9XG4gICAgICBvbkNsaWNrPXtoYW5kbGVDb3B5Q29kZX1cbiAgICA+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9e3N0eWxlcy5jb3B5QnV0dG9uSWNvbnN9IGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgICAgICB7aXNDb3BpZWQgPyAoXG4gICAgICAgICAgPEljb25TdWNjZXNzIGNsYXNzTmFtZT17c3R5bGVzLmNvcHlCdXR0b25TdWNjZXNzSWNvbn0gLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8SWNvbkNvcHkgY2xhc3NOYW1lPXtzdHlsZXMuY29weUJ1dHRvbkljb259IC8+XG4gICAgICAgICl9XG4gICAgICA8L3NwYW4+XG4gICAgPC9idXR0b24+XG4gIClcbn1cbiJdfQ==
