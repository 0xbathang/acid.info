"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const Link_1 = tslib_1.__importDefault(require("@docusaurus/Link"));
const useBaseUrl_1 = tslib_1.__importDefault(require("@docusaurus/useBaseUrl"));
const useDocusaurusContext_1 = tslib_1.__importDefault(require("@docusaurus/useDocusaurusContext"));
const theme_common_1 = require("@docusaurus/theme-common");
const ThemedImage_1 = tslib_1.__importDefault(require("@theme/ThemedImage"));
function LogoThemedImage({ logo, alt, imageClassName }) {
    const sources = {
        light: (0, useBaseUrl_1.default)(logo.src),
        dark: (0, useBaseUrl_1.default)(logo.srcDark || logo.src),
    };
    const themedImage = (react_1.default.createElement(ThemedImage_1.default, { className: logo.className, sources: sources, height: logo.height, width: logo.width, alt: alt, style: logo.style }));
    // Is this extra div really necessary?
    // introduced in https://github.com/facebook/docusaurus/pull/5666
    return imageClassName ? (react_1.default.createElement("div", { className: imageClassName }, themedImage)) : (themedImage);
}
function Logo(props) {
    const { siteConfig: { title }, } = (0, useDocusaurusContext_1.default)();
    const { navbar: { title: navbarTitle, logo }, } = (0, theme_common_1.useThemeConfig)();
    const { imageClassName, titleClassName, ...propsRest } = props;
    const logoLink = (0, useBaseUrl_1.default)(logo?.href || '/');
    // If visible title is shown, fallback alt text should be
    // an empty string to mark the logo as decorative.
    const fallbackAlt = navbarTitle ? '' : title;
    // Use logo alt text if provided (including empty string),
    // and provide a sensible fallback otherwise.
    const alt = logo?.alt ?? fallbackAlt;
    return (react_1.default.createElement(Link_1.default, { to: logoLink, ...propsRest, ...(logo?.target && { target: logo.target }) },
        logo && (react_1.default.createElement(LogoThemedImage, { logo: logo, alt: alt, imageClassName: imageClassName })),
        navbarTitle != null && react_1.default.createElement("b", { className: titleClassName }, navbarTitle)));
}
exports.default = Logo;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQvdGhlbWUvTG9nby9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXlCO0FBQ3pCLG9FQUFtQztBQUNuQyxnRkFBK0M7QUFDL0Msb0dBQW1FO0FBQ25FLDJEQUF5RDtBQUN6RCw2RUFBNEM7QUFHNUMsU0FBUyxlQUFlLENBQUMsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRTtJQUNwRCxNQUFNLE9BQU8sR0FBRztRQUNkLEtBQUssRUFBRSxJQUFBLG9CQUFVLEVBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUMzQixJQUFJLEVBQUUsSUFBQSxvQkFBVSxFQUFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQztLQUMzQyxDQUFBO0lBRUQsTUFBTSxXQUFXLEdBQUcsQ0FDbEIsOEJBQUMscUJBQVcsSUFDVixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsRUFDekIsT0FBTyxFQUFFLE9BQU8sRUFDaEIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQ25CLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxFQUNqQixHQUFHLEVBQUUsR0FBRyxFQUNSLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxHQUNqQixDQUNILENBQUE7SUFDRCxzQ0FBc0M7SUFDdEMsaUVBQWlFO0lBQ2pFLE9BQU8sY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUN0Qix1Q0FBSyxTQUFTLEVBQUUsY0FBYyxJQUFHLFdBQVcsQ0FBTyxDQUNwRCxDQUFDLENBQUMsQ0FBQyxDQUNGLFdBQVcsQ0FDWixDQUFBO0FBQ0gsQ0FBQztBQUVELFNBQXdCLElBQUksQ0FBQyxLQUFLO0lBQ2hDLE1BQU0sRUFDSixVQUFVLEVBQUUsRUFBRSxLQUFLLEVBQUUsR0FDdEIsR0FBRyxJQUFBLDhCQUFvQixHQUFFLENBQUE7SUFDMUIsTUFBTSxFQUNKLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLEdBQ3JDLEdBQUcsSUFBQSw2QkFBYyxHQUFFLENBQUE7SUFDcEIsTUFBTSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsR0FBRyxTQUFTLEVBQUUsR0FBRyxLQUFLLENBQUE7SUFDOUQsTUFBTSxRQUFRLEdBQUcsSUFBQSxvQkFBVSxFQUFDLElBQUksRUFBRSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUE7SUFDOUMseURBQXlEO0lBQ3pELGtEQUFrRDtJQUNsRCxNQUFNLFdBQVcsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFBO0lBQzVDLDBEQUEwRDtJQUMxRCw2Q0FBNkM7SUFDN0MsTUFBTSxHQUFHLEdBQUcsSUFBSSxFQUFFLEdBQUcsSUFBSSxXQUFXLENBQUE7SUFFcEMsT0FBTyxDQUNMLDhCQUFDLGNBQUksSUFDSCxFQUFFLEVBQUUsUUFBUSxLQUNSLFNBQVMsS0FDVCxDQUFDLElBQUksRUFBRSxNQUFNLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTVDLElBQUksSUFBSSxDQUNQLDhCQUFDLGVBQWUsSUFDZCxJQUFJLEVBQUUsSUFBSSxFQUNWLEdBQUcsRUFBRSxHQUFHLEVBQ1IsY0FBYyxFQUFFLGNBQWMsR0FDOUIsQ0FDSDtRQUNBLFdBQVcsSUFBSSxJQUFJLElBQUkscUNBQUcsU0FBUyxFQUFFLGNBQWMsSUFBRyxXQUFXLENBQUssQ0FDbEUsQ0FDUixDQUFBO0FBQ0gsQ0FBQztBQWhDRCx1QkFnQ0MiLCJmaWxlIjoiY2xpZW50L3RoZW1lL0xvZ28vaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgTGluayBmcm9tICdAZG9jdXNhdXJ1cy9MaW5rJ1xuaW1wb3J0IHVzZUJhc2VVcmwgZnJvbSAnQGRvY3VzYXVydXMvdXNlQmFzZVVybCdcbmltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tICdAZG9jdXNhdXJ1cy91c2VEb2N1c2F1cnVzQ29udGV4dCdcbmltcG9ydCB7IHVzZVRoZW1lQ29uZmlnIH0gZnJvbSAnQGRvY3VzYXVydXMvdGhlbWUtY29tbW9uJ1xuaW1wb3J0IFRoZW1lZEltYWdlIGZyb20gJ0B0aGVtZS9UaGVtZWRJbWFnZSdcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnXG5cbmZ1bmN0aW9uIExvZ29UaGVtZWRJbWFnZSh7IGxvZ28sIGFsdCwgaW1hZ2VDbGFzc05hbWUgfSkge1xuICBjb25zdCBzb3VyY2VzID0ge1xuICAgIGxpZ2h0OiB1c2VCYXNlVXJsKGxvZ28uc3JjKSxcbiAgICBkYXJrOiB1c2VCYXNlVXJsKGxvZ28uc3JjRGFyayB8fCBsb2dvLnNyYyksXG4gIH1cblxuICBjb25zdCB0aGVtZWRJbWFnZSA9IChcbiAgICA8VGhlbWVkSW1hZ2VcbiAgICAgIGNsYXNzTmFtZT17bG9nby5jbGFzc05hbWV9XG4gICAgICBzb3VyY2VzPXtzb3VyY2VzfVxuICAgICAgaGVpZ2h0PXtsb2dvLmhlaWdodH1cbiAgICAgIHdpZHRoPXtsb2dvLndpZHRofVxuICAgICAgYWx0PXthbHR9XG4gICAgICBzdHlsZT17bG9nby5zdHlsZX1cbiAgICAvPlxuICApXG4gIC8vIElzIHRoaXMgZXh0cmEgZGl2IHJlYWxseSBuZWNlc3Nhcnk/XG4gIC8vIGludHJvZHVjZWQgaW4gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvcHVsbC81NjY2XG4gIHJldHVybiBpbWFnZUNsYXNzTmFtZSA/IChcbiAgICA8ZGl2IGNsYXNzTmFtZT17aW1hZ2VDbGFzc05hbWV9Pnt0aGVtZWRJbWFnZX08L2Rpdj5cbiAgKSA6IChcbiAgICB0aGVtZWRJbWFnZVxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExvZ28ocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIHNpdGVDb25maWc6IHsgdGl0bGUgfSxcbiAgfSA9IHVzZURvY3VzYXVydXNDb250ZXh0KClcbiAgY29uc3Qge1xuICAgIG5hdmJhcjogeyB0aXRsZTogbmF2YmFyVGl0bGUsIGxvZ28gfSxcbiAgfSA9IHVzZVRoZW1lQ29uZmlnKClcbiAgY29uc3QgeyBpbWFnZUNsYXNzTmFtZSwgdGl0bGVDbGFzc05hbWUsIC4uLnByb3BzUmVzdCB9ID0gcHJvcHNcbiAgY29uc3QgbG9nb0xpbmsgPSB1c2VCYXNlVXJsKGxvZ28/LmhyZWYgfHwgJy8nKVxuICAvLyBJZiB2aXNpYmxlIHRpdGxlIGlzIHNob3duLCBmYWxsYmFjayBhbHQgdGV4dCBzaG91bGQgYmVcbiAgLy8gYW4gZW1wdHkgc3RyaW5nIHRvIG1hcmsgdGhlIGxvZ28gYXMgZGVjb3JhdGl2ZS5cbiAgY29uc3QgZmFsbGJhY2tBbHQgPSBuYXZiYXJUaXRsZSA/ICcnIDogdGl0bGVcbiAgLy8gVXNlIGxvZ28gYWx0IHRleHQgaWYgcHJvdmlkZWQgKGluY2x1ZGluZyBlbXB0eSBzdHJpbmcpLFxuICAvLyBhbmQgcHJvdmlkZSBhIHNlbnNpYmxlIGZhbGxiYWNrIG90aGVyd2lzZS5cbiAgY29uc3QgYWx0ID0gbG9nbz8uYWx0ID8/IGZhbGxiYWNrQWx0XG5cbiAgcmV0dXJuIChcbiAgICA8TGlua1xuICAgICAgdG89e2xvZ29MaW5rfVxuICAgICAgey4uLnByb3BzUmVzdH1cbiAgICAgIHsuLi4obG9nbz8udGFyZ2V0ICYmIHsgdGFyZ2V0OiBsb2dvLnRhcmdldCB9KX1cbiAgICA+XG4gICAgICB7bG9nbyAmJiAoXG4gICAgICAgIDxMb2dvVGhlbWVkSW1hZ2VcbiAgICAgICAgICBsb2dvPXtsb2dvfVxuICAgICAgICAgIGFsdD17YWx0fVxuICAgICAgICAgIGltYWdlQ2xhc3NOYW1lPXtpbWFnZUNsYXNzTmFtZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgICB7bmF2YmFyVGl0bGUgIT0gbnVsbCAmJiA8YiBjbGFzc05hbWU9e3RpdGxlQ2xhc3NOYW1lfT57bmF2YmFyVGl0bGV9PC9iPn1cbiAgICA8L0xpbms+XG4gIClcbn1cbiJdfQ==
